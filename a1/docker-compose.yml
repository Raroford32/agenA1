version: '3.8'

services:
  # PostgreSQL with pgvector for pattern storage
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: a1_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-a1_secure_pass}
      POSTGRES_DB: a1_patterns
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U a1_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Optional: Local Ethereum node for contract interaction
  ethereum-node:
    image: ethereum/client-go:stable
    command: >
      --http
      --http.addr 0.0.0.0
      --http.port 8545
      --http.api eth,net,web3
      --syncmode light
    ports:
      - "8545:8545"
      - "30303:30303"
    volumes:
      - ethereum_data:/root/.ethereum
    profiles:
      - ethereum

volumes:
  postgres_data:
  redis_data:
  ethereum_data: